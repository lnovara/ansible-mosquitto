---

- name: Install Mosquitto packages
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  with_items: "{{ mosquitto_packages }}"

- name: Install Mosquitto Python modules
  ansible.builtin.pip:
    name: "{{ item }}"
    state: present
  with_items: "{{ mosquitto_python_packages }}"

- name: Create Mosquitto group
  ansible.builtin.group:
    name: "{{ mosquitto_group }}"
    system: true
    state: present

- name: Create Mosquitto user
  ansible.builtin.user:
    name: "{{ mosquitto_user }}"
    group: "{{ mosquitto_group }}"
    groups: "{{ mosquitto_add_groups | join(',') }}"
    append: true
    home: "{{ mosquitto_home }}"
    shell: /usr/sbin/nologin
    system: true
    state: present
  notify:
    - Restart Mosquitto

- name: Merge default and custom Mosquitto config
  ansible.builtin.set_fact:
    mosquitto_config: "{{ _mosquitto_default_config | combine(mosquitto_config, recursive = True) }}"

- name: Create mosquitto/conf.d directory
  ansible.builtin.file:
    path: "{{ mosquitto_config.include_dir }}"
    state: directory
    owner: "{{ mosquitto_config_user }}"
    group: "{{ mosquitto_config_group }}"

- name: Create Mosquitto ACL file
  ansible.builtin.template:
    src: acl.j2
    dest: "{{ mosquitto_config.acl_file }}"
    owner: "{{ mosquitto_config_user }}"
    group: "{{ mosquitto_config_group }}"
    mode: 0644
  when: mosquitto_config.acl_file is defined
  notify:
    - Restart Mosquitto

- block:

    - name: Check Mosquitto password file existence
      ansible.builtin.stat:
        path: "{{ mosquitto_config.password_file }}"
      register: mosquitto_password_file_st

    - name: Create Mosquitto password file
      ansible.builtin.file:
        path: "{{ mosquitto_config.password_file }}"
        owner: "{{ mosquitto_config_user }}"
        group: "{{ mosquitto_group }}"
        mode: 0640
        state: touch
      when: not mosquitto_password_file_st.stat.exists

    - name: Get Mosquitto user entries
      ansible.builtin.command:
        cut -d ':' -f 1 "{{ mosquitto_config.password_file }}"
      register: mosquitto_users_list

    - name: Remove Mosquitto user/password entries
      ansible.builtin.command:
        mosquitto_passwd -D "{{ mosquitto_config.password_file }}" "{{ item.name }}"
      when:
        - item.state | default("present") == "absent"
        - item.name in mosquitto_users_list.stdout_lines
      with_items: "{{ mosquitto_auth_users }}"
      no_log: true
      notify:
        - Restart Mosquitto

    - name: Add Mosquitto user/password entries
      ansible.builtin.command:
        mosquitto_passwd -b "{{ mosquitto_config.password_file }}" "{{ item.name }}" "{{ item.password }}"
      when:
        - item.state | default("present") == "present"
        - item.name not in mosquitto_users_list.stdout_lines
      with_items: "{{ mosquitto_auth_users }}"
      no_log: true
      notify:
        - Restart Mosquitto

  when: mosquitto_config.password_file is defined

- name: Create Mosquitto PSK file
  ansible.builtin.template:
    src: psk.j2
    dest: "{{ mosquitto_config.psk_file }}"
    owner: "{{ mosquitto_config_user }}"
    group: "{{ mosquitto_group }}"
    mode: 0640
  when: mosquitto_config.psk_file is defined
  notify:
    - Restart Mosquitto

- name: Configure Mosquitto
  ansible.builtin.template:
    src: mosquitto.conf.j2
    dest: "{{ mosquitto_config_file }}"
    owner: "{{ mosquitto_config_user }}"
    group: "{{ mosquitto_config_group }}"
    mode: 0644
  notify:
    - Restart Mosquitto

- name: Create Mosquitto systemd service
  ansible.builtin.template:
    src: mosquitto.systemd.j2
    dest: /etc/systemd/system/mosquitto.service
    owner: root
    mode: 0640
  when: ansible_service_mgr == "systemd"
  notify:
    - Reload systemd and restart Mosquitto
    - Enable and start Mosquitto service
